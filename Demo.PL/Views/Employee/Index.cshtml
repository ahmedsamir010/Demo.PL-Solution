@model IEnumerable<EmployeeViewModel>
@{
    ViewData["Title"] = "Index";

    //string VDataMessage=ViewData["Message"] as string; // Enforce Type Safety --> [Require Casting ] Strongly Typed
    //string VBagMessage=ViewBag.Message;               // Can`t Enforce  Type Safety --> Not Require Casting [Weekly Typed]
}

@************************ View Data ******************************@

@*<div class="alert alert-success">
    @ViewData["Message"]

</div>
*@

@************************ View Bag ******************************@

@*<div class="alert alert-success">
    @ViewBag.Message

    </div>
*@

@if (TempData["Message"] is not null)
{
    <div class="alert alert-primary">
        @TempData["Message"]
    </div>
}




<h1>All Employees</h1>

<a asp-action="Create" class="btn btn-primary my-3">Create New Employee</a>

<div class="row justify-content-center align-items-center m-3">

    <form asp-action="Index" class="row col-8 offset-1">
        <div class="col-8">
            <input type="text" class="form-control" name="SearchValue" placeholder="Search By Name" />

        </div>

        <div class="col-4">
            <input type="submit" value="Search" class="btn btn-success" />
        </div>

    </form>

</div>


@if (Model?.Count() > 0)
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(E =>E.Name)</th>
                <th>@Html.DisplayNameFor(E =>E.Age)</th>
                <th>@Html.DisplayNameFor(E =>E.Image)</th>
                <th>@Html.DisplayNameFor(E =>E.Address)</th>
                <th>@Html.DisplayNameFor(E =>E.Department)</th>
                <th>@Html.DisplayNameFor(E =>E.Email)</th>
                <th>@Html.DisplayNameFor(E =>E.PhoneNumber)</th>
                <th>@Html.DisplayNameFor(E =>E.Salary)</th>
                <th>@Html.DisplayNameFor(E =>E.HireDate)</th>
                <th>@Html.DisplayNameFor(E =>E.IsActive)</th>
                <th>Details</th>
                <th>Update</th>
                <th>Delate</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(E =>employee.Name)</td>
                    <td>@Html.DisplayFor(E =>employee.Age)</td>
                    <td>
                        <img src="~/Files/Images/@employee.ImageUrl" class="img-circle" height="40" width="40" alt="@employee.Name Image" />
                    </td>
                    <td>@Html.DisplayFor(E =>employee.Address)</td>
                    <td>@Html.DisplayFor(E =>employee.Department.Name)</td>
                    <td>@Html.DisplayFor(E =>employee.Email)</td>
                    <td>@Html.DisplayFor(E =>employee.PhoneNumber)</td>
                    <td>@Html.DisplayFor(E =>employee.Salary)</td>
                    <td>@Html.DisplayFor(E =>employee.HireDate)</td>
                    <td>@Html.DisplayFor(E =>employee.IsActive)</td>
                    <partial name="_ButtonPartialView" model="@employee.Id" />

                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-warning my-5">
        <h3>No Employees Found</h3>
    </div>
}